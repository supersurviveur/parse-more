//! Implementation of the [ParseMore] trait for every types from the [syn] crates implementing [syn::parse::Parse].

use crate::{parse_more_auto_impl, ParseMore};

// A macro is used to generate ParseMore instead of generics to avoid any "upstream crates may add a new impl of trait" errors
// See https://docs.rs/syn/latest/syn/parse/trait.Parse.html
parse_more_auto_impl! {
    // Foreign types
    proc_macro2::TokenStream,

    // Implementors
    syn::BinOp,
    syn::CapturedParam,
    syn::Expr,
    syn::FnArg,
    syn::ForeignItem,
    syn::GenericArgument,
    syn::GenericParam,
    syn::ImplItem,
    syn::Item,
    syn::Member,
    syn::Meta,
    syn::PointerMutability,
    syn::RangeLimits,
    syn::ReturnType,
    syn::StaticMutability,
    syn::Stmt,
    syn::TraitBoundModifier,
    syn::TraitItem,
    syn::Type,
    syn::TypeParamBound,
    syn::UnOp,
    syn::UseTree,
    syn::Visibility,
    syn::WherePredicate,
    syn::Abi,
    syn::AngleBracketedGenericArguments,
    syn::Arm,
    syn::BareFnArg,
    syn::Block,
    syn::BoundLifetimes,
    syn::ConstParam,
    syn::DeriveInput,
    syn::ExprArray,
    syn::ExprAssign,
    syn::ExprAsync,
    syn::ExprAwait,
    syn::ExprBinary,
    syn::ExprBlock,
    syn::ExprBreak,
    syn::ExprCall,
    syn::ExprCast,
    syn::ExprClosure,
    syn::ExprConst,
    syn::ExprContinue,
    syn::ExprField,
    syn::ExprForLoop,
    syn::ExprIf,
    syn::ExprIndex,
    syn::ExprInfer,
    syn::ExprLet,
    syn::ExprLit,
    syn::ExprLoop,
    syn::ExprMacro,
    syn::ExprMatch,
    syn::ExprMethodCall,
    syn::ExprParen,
    syn::ExprPath,
    syn::ExprRange,
    syn::ExprRawAddr,
    syn::ExprReference,
    syn::ExprRepeat,
    syn::ExprReturn,
    syn::ExprStruct,
    syn::ExprTry,
    syn::ExprTryBlock,
    syn::ExprTuple,
    syn::ExprUnary,
    syn::ExprUnsafe,
    syn::ExprWhile,
    syn::ExprYield,
    syn::FieldValue,
    syn::FieldsNamed,
    syn::FieldsUnnamed,
    syn::File,
    syn::ForeignItemFn,
    syn::ForeignItemMacro,
    syn::ForeignItemStatic,
    syn::ForeignItemType,
    syn::Generics,
    syn::ImplItemConst,
    syn::ImplItemFn,
    syn::ImplItemMacro,
    syn::ImplItemType,
    syn::Index,
    syn::ItemConst,
    syn::ItemEnum,
    syn::ItemExternCrate,
    syn::ItemFn,
    syn::ItemForeignMod,
    syn::ItemImpl,
    syn::ItemMacro,
    syn::ItemMod,
    syn::ItemStatic,
    syn::ItemStruct,
    syn::ItemTrait,
    syn::ItemTraitAlias,
    syn::ItemType,
    syn::ItemUnion,
    syn::ItemUse,
    syn::Label,
    syn::LifetimeParam,
    syn::Macro,
    syn::MetaList,
    syn::MetaNameValue,
    syn::ParenthesizedGenericArguments,
    syn::PatType,
    syn::Path,
    syn::PathSegment,
    syn::PreciseCapture,
    syn::Receiver,
    syn::Signature,
    syn::TraitBound,
    syn::TraitItemConst,
    syn::TraitItemFn,
    syn::TraitItemMacro,
    syn::TraitItemType,
    syn::TypeArray,
    syn::TypeBareFn,
    syn::TypeGroup,
    syn::TypeImplTrait,
    syn::TypeInfer,
    syn::TypeMacro,
    syn::TypeNever,
    syn::TypeParam,
    syn::TypeParen,
    syn::TypePath,
    syn::TypePtr,
    syn::TypeReference,
    syn::TypeSlice,
    syn::TypeTraitObject,
    syn::TypeTuple,
    syn::Variant,
    syn::WhereClause,
    syn::parse::Nothing,

    // See https://docs.rs/syn/latest/syn/token/trait.Token.html

    // Foreign Types
    proc_macro2::TokenTree,
    proc_macro2::Group,
    proc_macro2::Literal,
    proc_macro2::Punct,

    // Implementors
    syn::Lit,
    syn::Ident,
    syn::Lifetime,
    syn::LitBool,
    syn::LitByte,
    syn::LitByteStr,
    syn::LitCStr,
    syn::LitChar,
    syn::LitFloat,
    syn::LitInt,
    syn::LitStr,
    syn::token::Abstract,
    syn::token::And,
    syn::token::AndAnd,
    syn::token::AndEq,
    syn::token::As,
    syn::token::Async,
    syn::token::At,
    syn::token::Auto,
    syn::token::Await,
    syn::token::Become,
    syn::token::Box,
    syn::token::Break,
    syn::token::Caret,
    syn::token::CaretEq,
    syn::token::Colon,
    syn::token::Comma,
    syn::token::Const,
    syn::token::Continue,
    syn::token::Crate,
    syn::token::Default,
    syn::token::Do,
    syn::token::Dollar,
    syn::token::Dot,
    syn::token::DotDot,
    syn::token::DotDotDot,
    syn::token::DotDotEq,
    syn::token::Dyn,
    syn::token::Else,
    syn::token::Enum,
    syn::token::Eq,
    syn::token::EqEq,
    syn::token::Extern,
    syn::token::FatArrow,
    syn::token::Final,
    syn::token::Fn,
    syn::token::For,
    syn::token::Ge,
    syn::token::Gt,
    syn::token::If,
    syn::token::Impl,
    syn::token::In,
    syn::token::LArrow,
    syn::token::Le,
    syn::token::Let,
    syn::token::Loop,
    syn::token::Lt,
    syn::token::Macro,
    syn::token::Match,
    syn::token::Minus,
    syn::token::MinusEq,
    syn::token::Mod,
    syn::token::Move,
    syn::token::Mut,
    syn::token::Ne,
    syn::token::Not,
    syn::token::Or,
    syn::token::OrEq,
    syn::token::OrOr,
    syn::token::Override,
    syn::token::PathSep,
    syn::token::Percent,
    syn::token::PercentEq,
    syn::token::Plus,
    syn::token::PlusEq,
    syn::token::Pound,
    syn::token::Priv,
    syn::token::Pub,
    syn::token::Question,
    syn::token::RArrow,
    syn::token::Raw,
    syn::token::Ref,
    syn::token::Return,
    syn::token::SelfType,
    syn::token::SelfValue,
    syn::token::Semi,
    syn::token::Shl,
    syn::token::ShlEq,
    syn::token::Shr,
    syn::token::ShrEq,
    syn::token::Slash,
    syn::token::SlashEq,
    syn::token::Star,
    syn::token::StarEq,
    syn::token::Static,
    syn::token::Struct,
    syn::token::Super,
    syn::token::Tilde,
    syn::token::Trait,
    syn::token::Try,
    syn::token::Type,
    syn::token::Typeof,
    syn::token::Underscore,
    syn::token::Union,
    syn::token::Unsafe,
    syn::token::Unsized,
    syn::token::Use,
    syn::token::Virtual,
    syn::token::Where,
    syn::token::While,
    syn::token::Yield
}

impl<T: ParseMore> ParseMore for Box<T> {
    fn parse(input: syn::parse::ParseStream) -> syn::Result<Self> {
        Ok(Box::new(<T as ParseMore>::parse(input)?))
    }
}
